import { type NextPage } from "next";
import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import autoAnimate from '@formkit/auto-animate'
import {kyber} from 'kyber-crystals';

const Kyber: NextPage = () => {

    const [loading, setLoading] = useState(0)
    const [publicKey, setPublicKey] = useState<string>(null)
    const [privateKey, setPrivateKey] = useState<string>(null)
    const [cyphertext, setCyphertext] = useState<string>(null)
    const [secret, setSecret] = useState<string>(null)

    const work = async () => {
        const keyPair = await kyber.keyPair()
        setPublicKey(keyPair.publicKey)
        setPrivateKey(keyPair.privateKey)
        const { cyphertext, secret } = await kyber.encrypt(keyPair.publicKey)
        setCyphertext(cyphertext)
        setSecret(secret)
        setLoading(2)
    }

    const ref = useRef<HTMLElement>(null)
    useEffect(() => {
        ref.current && autoAnimate(ref.current)
    }, [ref])

    return (
        <>
            <Head>
                <title>Kuantun Kompare</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <>
                <h1 className="text-6xl font-bold text-gray-800">Kyber</h1>
                <p className="mt-12">
                    The Supersingular Isogeny Diffie-Hellman (SIDH) is a post-quantum cryptographic key exchange algorithm that is based on the algebraic structure of elliptic curves. It was introduced by Jao and De Feo in 2011.
                </p>
                <button className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 w-72 mx-auto rounded-lg mt-12"
                    onClick={
                        async () => {
                            setLoading(1)
                            await work()
                        }
                    }
                >
                    {
                        loading == 0 && "Generate Key Pair"
                    }
                    {
                        loading == 1 && "Generating Key Pair..."
                    }
                    {
                        loading == 2 && "Key Pair Generated"
                    }
                </button>
                <div ref={ref}>
                    {
                        publicKey && (
                            <div className="mt-12">
                                <h2 className="text-2xl font-bold text-gray-800 mb-4">Public Key</h2>
                                <textarea value={publicKey} className="w-1/2 resize-none p-4 rounded-xl" rows={5} disabled={true}>

                                </textarea>
                            </div>
                        )
                    }
                    {
                        privateKey && (
                            <div className="mt-12">
                                <h2 className="text-2xl font-bold text-gray-800 mb-4">Private Key</h2>
                                <textarea value={privateKey} className="w-1/2 resize-none p-4 rounded-xl" rows={5} disabled={true} />
                            </div>
                        )
                    }
                    {
                        cyphertext && (
                            <div className="mt-12">
                                <h2 className="text-2xl font-bold text-gray-800 mb-4">Cyphertext</h2>
                                <textarea value={cyphertext} className="w-1/2 resize-none p-4 rounded-xl" rows={5} disabled={true} />
                            </div>
                        )
                    }
                    {
                        secret && (
                            <div className="mt-12">
                                <h2 className="text-2xl font-bold text-gray-800 mb-4">Secret</h2>
                                <textarea value={secret} className="w-1/2 resize-none p-4 rounded-xl" rows={5} disabled={true} />
                            </div>
                        )
                    }
                </div>
            </>
        </>
    );
};

export default Kyber;